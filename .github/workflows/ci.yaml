name: ci

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      -
        name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV    
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - if: contains(github.ref, 'refs/heads/release/')
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - if: contains(github.ref, 'refs/heads/release/')
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          tags: temporary-build-image-${{ env.PLATFORM_PAIR }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/${{ env.PLATFORM_PAIR }}.tar
      - name: Load image
        run: |
          docker load --input /tmp/${{ env.PLATFORM_PAIR }}.tar
          docker image ls -a
      - name: Test
        run: |
          docker run --platform ${{ matrix.platform }} --rm temporary-build-image-${{ env.PLATFORM_PAIR }} sh -c 'uname -a && php -v'
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PLATFORM_PAIR }}.tar
          path: /tmp/${{ env.PLATFORM_PAIR }}.tar          
  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      -
        name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV   
      - name: Download amd64 artifact
        uses: actions/download-artifact@v3
        with:
          name: $PLATFORM_PAIR
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/${{ env.PLATFORM_PAIR }}.tar
          docker image ls -a
      - name: Test
        run: |
          docker run --platform ${{ matrix.platform }} --rm temporary-build-image-${{ env.PLATFORM_PAIR }} sh -c 'uname -a && php -v'
  use:
      runs-on: ubuntu-latest
      needs: test
      steps:
        - name: Download amd64 artifact
          uses: actions/download-artifact@v3
          with:
            name: linux-amd64
            path: /tmp
        - name: Download arm64 artifact
          uses: actions/download-artifact@v3
          with:
            name: linux-arm64
            path: /tmp
        - name: Load image
          run: |
            docker load --input /tmp/linux-arm64.tar
            docker load --input /tmp/linux-amd64.tar
            docker image ls -a          
        - name: Test
          run: |
            docker run --platform linux/amd64 --rm temporary-build-image-linux-amd64 sh -c 'uname -a && php -v'
