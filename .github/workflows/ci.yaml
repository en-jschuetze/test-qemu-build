name: ci

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      -
        name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV    
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - if: contains(github.ref, 'refs/heads/release/')
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - if: contains(github.ref, 'refs/heads/release/')
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set up containerd
        uses: crazy-max/ghaction-setup-containerd@v3
      -
        name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          tags: temporary-build-image-${{ env.PLATFORM_PAIR }}
          outputs: type=oci,dest=/tmp/${{ env.PLATFORM_PAIR }}.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PLATFORM_PAIR }}.tar
          path: /tmp/${{ env.PLATFORM_PAIR }}.tar          
  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      -
        name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV   
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Download ${{ matrix.platform }} artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.PLATFORM_PAIR }}.tar
          path: /tmp
      -
        name: Set up containerd
        uses: crazy-max/ghaction-setup-containerd@v3
      - name: Load image
        run: |
          sudo ctr i import --base-name ghcr.io/en-jschuetze/test-qemu-build --digests --all-platforms /tmp/linux-amd64.tar
          sudo ctr images list
      - name: Test
        run: |
          nerdctl run --platform ${{ matrix.platform }} --rm ghcr.io/en-jschuetze/test-qemu-build sh -c 'uname -a && php -v'
  use:
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3    
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        - name: Download amd64 artifact
          uses: actions/download-artifact@v3
          with:
            name: linux-amd64.tar
            path: /tmp
        - name: Download arm64 artifact
          uses: actions/download-artifact@v3
          with:
            name: linux-arm64.tar
            path: /tmp
        - name: Import image in containerd
          run: |
            sudo ctr i import --base-name ghcr.io/en-jschuetze/test-qemu-build --digests --all-platforms /tmp/linux-arm64.tar  
            sudo ctr i import --base-name ghcr.io/en-jschuetze/test-qemu-build --digests --all-platforms /tmp/linux-amd64.tar
            sudo ctr images list
        - name: Login to ghcr.io
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Push Combined Image
          run: |
            sudo ctr --debug i push --user "${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}" --all-platforms ghcr.io/en-jschuetze/test-qemu-build

